<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-context.xsd">
	
	
	<!-- AOP 횡단 관심에 해당하는 Advice 클래스를 등록한다. 클래스명 바뀌면 여기만 바꾸면됨
	<bean id="log" 				class="com.multicampus.biz.common.LogAdvice"/>
	<bean id="afterReturning" 	class="com.multicampus.biz.common.AfterReturningAdvice"/>
	<bean id="afterThrowing" 	class="com.multicampus.biz.common.AfterThrowingAdvice"/>
	<bean id="around" 			class="com.multicampus.biz.common.AroundAdvice"/>
	이제 @service어노테이션 사용-->
	
	
	<!-- AOP 설정 
	<aop:config>
		<aop:pointcut id ="allPointcut" expression="execution(* com.multicampus.biz..*Impl.*(..))"/>
		<aop:pointcut id ="getPointcut" expression="execution(* com.multicampus.biz..*Impl.get*(..))"/>
		
		<aop:aspect ref="log">
			<aop:before pointcut-ref="allPointcut" method="printLog"/>
		</aop:aspect>
		
		<aop:aspect ref="afterReturning">
			<aop:after-returning pointcut-ref="getPointcut" method="afterLog" returning="returnObj"/>
		</aop:aspect>
		
		<aop:aspect ref="afterThrowing">
			<aop:after-throwing pointcut-ref="allPointcut" method="exceptionLog" throwing="exceptionObj"/>
		</aop:aspect>
		
		<aop:aspect ref="around">
			<aop:around pointcut-ref="allPointcut" method="aroundLog" />
		</aop:aspect>
	</aop:config> aop설정은 이제 아래 코드가 대신함-->
	
	<context:component-scan base-package="com.multicampus.biz"/>
	<aop:aspectj-autoproxy/>
	
	<bean id="boardDAO" class="com.multicampus.biz.board.BoardDAO"></bean>
	
	<bean id="boardService" class="com.multicampus.biz.board.BoardServiceImpl">
		<constructor-arg ref="boardDAO"></constructor-arg>
	</bean>
	
	<!-- jdbctemplate 등록 -->
	<!-- 내가만든 클래스는 bean등록 or @service해도되는데, 내가 만들지 않은 클래스는 bean등록 외엔 답이없다. -->
	<!-- 이것도 귀찮으면 springboot 써야함 -->
	<bean class ="org.springframework.jdbc.core.JdbcTemplate"></bean>
	
</beans>











